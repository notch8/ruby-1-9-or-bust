<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
 
 <title>Ruby 1.9 Or Bust</title>
 <link href="http://ruby-1-9-or-bust.github.com/ruby-1-9-or-bust/atom.xml" rel="self"/>
 <link href="http://ruby-1-9-or-bust.github.com/ruby-1-9-or-bust/"/>
 <updated>2010-04-05T23:03:51-07:00</updated>
 <id>http://ruby-1-9-or-bust.github.com/ruby-1-9-or-bust/</id>
 <author>
   <name>Dr Nic Williams</name>
   <email>ruby-1-9-or-bustwilliams@gmail.com</email>
 </author>

 
 <entry>
   <title>Deploying Rails on Ruby 1.9</title>
   <link href="http://ruby-1-9-or-bust.github.com/ruby-1-9-or-bust/2009/05/06/deploying-rails-on-ruby-1-9.html"/>
   <updated>2009-05-06T00:00:00-07:00</updated>
   <id>http://ruby-1-9-or-bust.github.com/ruby-1-9-or-bust/2009/05/06/deploying-rails-on-ruby-1-9</id>
   <content type="html">&lt;h1 id='tools'&gt;Tools&lt;/h1&gt;

&lt;pre&gt;&lt;code&gt;* Ruby &amp;gt;= 1.9.1
* Passenger &amp;gt;= 2.2.2
* Rails &amp;gt;= 2.3
* Mysql
* Nginx (you&amp;#39;ll compile one before we&amp;#39;re done)&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id='steps'&gt;Steps&lt;/h1&gt;

&lt;p&gt;1) Install Ruby 1.9 (see instructions for your platform)&lt;/p&gt;

&lt;p&gt;2) gem1.9 install passenger # Assuming your using a prefix, you dont have to&lt;/p&gt;

&lt;p&gt;3) passenger-install-nginx-module&lt;/p&gt;

&lt;p&gt;4) add the following to your nginx config before the last }&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;  server &lt;span class='o'&gt;{&lt;/span&gt;
     listen 80;
     server_name www.yourhost.com;
     root /somewhere/public;   &lt;span class='c'&gt;# &amp;lt;--- be sure to point to &amp;#39;public&amp;#39;!&lt;/span&gt;
     passenger_enabled on;
  &lt;span class='o'&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;5) install mysql drivers&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;curl -O http://tmtm.org/downloads/mysql/ruby/mysql-ruby-2.8.1.tar.gz
tar zxfv mysql-ruby-2.8.1.tar.gz
&lt;span class='nb'&gt;cd &lt;/span&gt;mysql-ruby-2.8.1
ruby extconf.rb
make
sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;6) sudo gem1.9 install rails&lt;/p&gt;

&lt;p&gt;7) rails -d mysql somewhere&lt;/p&gt;

&lt;p&gt;8) start nginx&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Object.methods - A Gotcha I Hadn't Seen Before</title>
   <link href="http://ruby-1-9-or-bust.github.com/ruby-1-9-or-bust/2009/04/29/object-methods-a-gotcha-i-hadnt-seen-before.html"/>
   <updated>2009-04-29T00:00:00-07:00</updated>
   <id>http://ruby-1-9-or-bust.github.com/ruby-1-9-or-bust/2009/04/29/object-methods-a-gotcha-i-hadnt-seen-before</id>
   <content type="html">&lt;p&gt;There are many posts about String.each, the new block shadowing and even a post or two about some of the C level changes.&lt;/p&gt;

&lt;p&gt;However I had not seen anyone point out this little change that could affect certain meta-programming situations. Calling .methods returns a list of all the methods which a certain object or class responds to.&lt;/p&gt;

&lt;p&gt;For the most part this is only useful in IRB. I often call&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;  &lt;span class='n'&gt;test_object&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;methods&lt;/span&gt; &lt;span class='o'&gt;-&lt;/span&gt; &lt;span class='no'&gt;Object&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;methods&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;when I can&amp;#8217;t remember a method name.&lt;/p&gt;

&lt;p&gt;The change between Ruby 1.8 and Ruby 1.9 is that .methods now returns an array of symbols where in 1.8 it returned an array of strings. For the most part no problem, but something to be aware of. .respond_to? appears to still take either a string or a symbol, so if you&amp;#8217;re just checking an object do this:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;  &lt;span class='n'&gt;object&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;respond_do&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='ss'&gt;:method&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;instead of:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='ruby'&gt;  &lt;span class='n'&gt;object&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;methods&lt;/span&gt;&lt;span class='o'&gt;.&lt;/span&gt;&lt;span class='n'&gt;include?&lt;/span&gt;&lt;span class='p'&gt;(&lt;/span&gt;&lt;span class='s2'&gt;&amp;quot;method&amp;quot;&lt;/span&gt;&lt;span class='p'&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Installing on Ubuntu</title>
   <link href="http://ruby-1-9-or-bust.github.com/ruby-1-9-or-bust/2009/04/19/installing-on-ubuntu.html"/>
   <updated>2009-04-19T00:00:00-07:00</updated>
   <id>http://ruby-1-9-or-bust.github.com/ruby-1-9-or-bust/2009/04/19/installing-on-ubuntu</id>
   <content type="html">&lt;h1 id='using_synaptic'&gt;Using Synaptic&lt;/h1&gt;

&lt;p&gt;&lt;em&gt;warning: it appears that the Ubuntu package is currently 1.9.0, which you don&amp;#8217;t want&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Ruby 1.9 is available via the Synaptic installer. Be sure to select ruby1.9, irb1.9 and rubygems1.9 From Source&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;  sudo apt-get -y install libc6-dev libssl-dev make build-essential libssl-dev libreadline5-dev zlib1g-dev
  tar zxfv ruby-1.9.1-p0.tgz
  &lt;span class='nb'&gt;cd &lt;/span&gt;ruby-1.9.1-p0
  ./configure
  make
  sudo make install
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;</content>
 </entry>
 
 <entry>
   <title>Installing Ruby 1.9 on OS X Leopard</title>
   <link href="http://ruby-1-9-or-bust.github.com/ruby-1-9-or-bust/2009/04/02/installing-leapord.html"/>
   <updated>2009-04-02T00:00:00-07:00</updated>
   <id>http://ruby-1-9-or-bust.github.com/ruby-1-9-or-bust/2009/04/02/installing-leapord</id>
   <content type="html">&lt;h1 id='pre_reqs'&gt;Pre Reqs&lt;/h1&gt;

&lt;p&gt;You need XCode 3.1 or greater to install Ruby 1.9.1&lt;/p&gt;

&lt;h1 id='macports'&gt;MacPorts&lt;/h1&gt;

&lt;p&gt;Personally I&amp;#8217;ve found using a package manager is much simpler that trying to roll you own of everything. One of the reasons this works so well for me is that I know when to give up and compile my own package. Ruby 1.9 is in &lt;a href='http://macports.org'&gt;MacPorts&lt;/a&gt;, it is stable and that is how I install on Ruby 1.9 on the vast majority of my Macs (there are 4 that I maintain btw).&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;  sudo port install ruby19 +mactk +c_api_docs
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;h2 id='variations'&gt;Variations&lt;/h2&gt;

&lt;p&gt;MacPorts has the concept of variants which are the options for your package. According to the command &amp;#8220;port variants ruby19&amp;#8221; there are the following availible:&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;  ruby19 has the variants:
      nosuffix: Don&lt;span class='err'&gt;&amp;#39;&lt;/span&gt;t add the 1.9 program suffix to the executables. Note: that makes the port conflict with ruby &lt;span class='o'&gt;(&lt;/span&gt;1.8&lt;span class='o'&gt;)&lt;/span&gt;, rb-rubygems, and rb-rake ports
      c_api_docs: Generate documentation &lt;span class='k'&gt;for &lt;/span&gt;Ruby C API
      tk: Build using MacPorts Tk
      mactk: Build using MacOS X Tk Framework
      universal: Build &lt;span class='k'&gt;for &lt;/span&gt;multiple architectures
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;As you can see I like having the C API docs and using the existing MacTK framework.&lt;/p&gt;

&lt;h1 id='by_hand'&gt;By Hand&lt;/h1&gt;

&lt;p&gt;Maybe MacPorts makes you angry, you&amp;#8217;ve had bad luck with it in the past or you just want to compile your own. This is a totally legitimate thing to want to do. It turns out its not hard either (knock on wood)&lt;/p&gt;
&lt;div class='highlight'&gt;&lt;pre&gt;&lt;code class='bash'&gt;  curl -O ftp://ftp.ruby-lang.org/pub/ruby/1.9/ruby-1.9.1-p0.tar.gz
  tar zxfv ruby-1.9.1-p0.tar.gz
  &lt;span class='nb'&gt;cd &lt;/span&gt;ruby-1.9.1-p0
  ./configure --enable-shared --enable-pthread &lt;span class='nv'&gt;CFLAGS&lt;/span&gt;&lt;span class='o'&gt;=&lt;/span&gt;-D_XOPEN_SOURCE&lt;span class='o'&gt;=&lt;/span&gt;1
  make
  sudo make install
  &lt;span class='nb'&gt;echo&lt;/span&gt; &lt;span class='s1'&gt;&amp;#39;export PATH=&amp;quot;/usr/local/bin:/usr/local/sbin:/usr/local/mysql/bin:$PATH&amp;quot;&amp;#39;&lt;/span&gt; &amp;gt; ~/.profile
  &lt;span class='nb'&gt;source&lt;/span&gt; ~/.profile
  ruby -v
  ruby -e &lt;span class='s2'&gt;&amp;quot;puts &amp;#39;hello world&amp;#39;&amp;quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
&lt;p&gt;I did an install this way a few days ago. If you get stuck checkout this &lt;a href='/files/screenlog.0'&gt;Gnu Screen log&lt;/a&gt; of the install, it may help you&lt;/p&gt;</content>
 </entry>
 
 <entry>
   <title>Welcome to 'Ruby 1.9 Or Bust'</title>
   <link href="http://ruby-1-9-or-bust.github.com/ruby-1-9-or-bust/2009/03/14/first-post.html"/>
   <updated>2009-03-14T00:00:00-07:00</updated>
   <id>http://ruby-1-9-or-bust.github.com/ruby-1-9-or-bust/2009/03/14/first-post</id>
   <content type="html">&lt;h1 id='the_problem'&gt;The problem&lt;/h1&gt;

&lt;p&gt;Ruby 1.9 is &lt;a href='http://ruby-lang.org'&gt;here&lt;/a&gt;, but not really. Ruby 1.9 won&amp;#8217;t really be here until we are all using it, and we won&amp;#8217;t all be using it until the majority of &lt;a href='http://isitruby19.com/'&gt;Ruby gems are working&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id='what_can_we_do'&gt;What Can We Do?&lt;/h1&gt;

&lt;p&gt;Here is the idea. What if instead of trying to make every project maintainer learn all the tricks and skills needed to convert a piece of code to 1.9, we put up a little money to get one expert to work on converting gems over. Someone to work with maintainers to get their gems up to date. Someone who would gain practice as he converts gem after gem and who would dedicate real hours to making this conversion done. What if at Rubyconf this year we could go around saying &amp;#8220;You&amp;#8217;re not still using Ruby 1.8 are you?&amp;#8221; the same way we go around saying &amp;#8220;You&amp;#8217;re not still using Ruby 1.6 are you?&amp;#8221;.&lt;/p&gt;

&lt;h1 id='how'&gt;How?&lt;/h1&gt;

&lt;p&gt;I&amp;#8217;m putting myself out there to be that guy. However I still need to eat and my wife would be kind of pissed if we lost our house. So I need your help too. My goal is to be able to work 20 hours a week for the next 2 months on converting gems over. To do that I would need to get 400 of you to donate &amp;#36;30. I don&amp;#8217;t expect that to happen over night (it would be cool though ;-) So in order to get started I&amp;#8217;m looking to raise &amp;#36;3000, enough to work for 40 hours. Once that amount is raise the project will be officially on and I&amp;#8217;ll clear the time in my schedule to devote to it. Though my current plan is to start by going through the reported failures on &lt;a href='http://isitruby19.com/'&gt;Is It Ruby 1.9&lt;/a&gt; and fixing them based on their popularity, I&amp;#8217;ve put a poll at the bottom to let you tell me how I should do this. If after one month we haven&amp;#8217;t made that target I&amp;#8217;ll clear time to do work for as much as we did raise. As a good faith effort I will be converting all of the current gems I maintain in the mean time.&lt;/p&gt;

&lt;h1 id='is_this_really_necessary'&gt;Is This Really Necessary?&lt;/h1&gt;

&lt;p&gt;I&amp;#8217;ve been programming in Ruby since 2003. I remember the transition from 1.6 to 1.8, I was trying to learn Ruby at the time. It was painful, agonizing, and took way to long. As a community we are already doing better this time, but the faster we get on with it the faster we get all the goodness that is 1.9. Also the sooner we don&amp;#8217;t have to maintain both, and the sooner noobs won&amp;#8217;t wander around saying things like &amp;#8220;but the documentation doesn&amp;#8217;t match, WTF?&amp;#8221;&lt;/p&gt;

&lt;h1 id='should_i_trust_this_man'&gt;Should I Trust This Man?&lt;/h1&gt;

&lt;p&gt;I&amp;#8217;ve got a history working with Ruby, I&amp;#8217;ve done Rails full time professionally since 2005 and I run &lt;a href='http://notch8.com'&gt;Notch8&lt;/a&gt; consulting in San Diego. I&amp;#8217;m a regular member of &lt;a href='http://sdruby.com'&gt;SDRuby&lt;/a&gt;. You can hear me speak on our podcast. I have a bachelor&amp;#8217;s degree in Computer Science and have worked in embedded C and Java. I really respect and love the Ruby community and I want to see it flourish. I promise to be very transparent and accountable with my actions. I am used to tracking my hours, to keeping a schedule and to being accountable to clients. In this project you, the community, are my client and so my time logs will be completely open to you. I&amp;#8217;ll be posting them each week along with blog entries and how to documents. You will know what I have worked on and how long it has taken me.&lt;/p&gt;</content>
 </entry>
 
 
</feed>